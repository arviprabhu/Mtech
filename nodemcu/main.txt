#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h> 
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>

float tempc = 30;  
const char *ssid = "ap";
const char *password = "12345678";
const char* host = "iotservice.cfapps.eu10.hana.ondemand.com";
const int httpsPort = 443;  //HTTPS= 443 and HTTP = 80
const char fingerprint[] PROGMEM = "cf b0 ff 1c 13 b3 77 be d3 dc 5c 2f 64 61 d0 83 42 f6 91 2d";
   
void setup() {
  delay(1000);
  Serial.begin(115200);
  WiFi.mode(WIFI_OFF);        
  delay(1000);
  WiFi.mode(WIFI_STA);       

  WiFi.begin(ssid, password);     
  Serial.println("");

  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP()); 
}

void loop() {
  WiFiClientSecure httpsClient;  

  Serial.println(host);

  Serial.printf("Using fingerprint '%s'\n", fingerprint);
  httpsClient.setFingerprint(fingerprint);
  httpsClient.setTimeout(15000); // 15 Seconds
  delay(1000);
  
  Serial.print("HTTPS Connecting");
  int r=0; //retry counter
  while((!httpsClient.connect(host, httpsPort)) && (r < 30)){
      delay(100);
      Serial.print(".");
      r++;
  }
  if(r==30) {
    Serial.println("Connection failed");
  }
  else {
    Serial.println("Connected to web");
  }
  
  String getData, Link;
  Link = "/data/";

  Serial.print("requesting URL: ");
  Serial.println(host);
 
  String postData = "{\"tempetature\":"+String(tempc)+",\"humidity\":"+String(tempc)+",\"deviceId\":"+String(tempc)+",\"currentLoad\":"+String(tempc)+",\"alerts\":"+String(tempc)+"}";
  Serial.println(postData);

  httpsClient.print(String("POST ") + Link + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Content-Type: application/json"+ "\r\n" +
               "Content-Length: " + postData.length() + "\r\n"
               "\r\n" +postData+
               "Connection: close\r\n\r\n");

  Serial.println("request sent");
                  
  while (httpsClient.connected()) {
    String line = httpsClient.readStringUntil('\n');
    if (line == "\r") {
      Serial.println("headers received");
      break;
    }
  }

  Serial.println("reply was:");
  Serial.println("==========");
  String line;
  while(httpsClient.available()){        
    line = httpsClient.readStringUntil('\n')  ;
    Serial.println(line); 
  }
  Serial.println("==========");
  Serial.println("closing connection");
    
  delay(5000); 
}